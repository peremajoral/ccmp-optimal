name: Quality Gates

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Level 1: Fast feedback (< 2 minutes)
  fast-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: TypeScript check
        run: npm run typecheck

      - name: Format check
        run: npm run format:check
        continue-on-error: true

  # Level 2: Core testing (< 5 minutes)
  core-testing:
    runs-on: ubuntu-latest
    needs: fast-quality
    timeout-minutes: 8
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Unit tests
        run: npm test

      - name: Integration tests
        run: npm run test:integration
        continue-on-error: true

  # Level 3: Build validation (< 8 minutes)
  build-validation:
    runs-on: ubuntu-latest
    needs: core-testing
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Bundle analysis
        run: npm run bundle:analyze
        continue-on-error: true

      - name: Performance budget check
        run: npm run perf:budget
        continue-on-error: true

  # Level 4: Extended validation (PR only, < 15 minutes)
  extended-validation:
    runs-on: ubuntu-latest
    needs: build-validation
    if: github.event_name == 'pull_request'
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for E2E tests
        run: npm run build

      - name: Start application
        run: npm run preview &
        env:
          NODE_ENV: production

      - name: Wait for application
        run: npx wait-on http://localhost:4173

      - name: E2E tests
        run: npm run test:e2e

      - name: Accessibility tests
        run: npm run test:a11y
        continue-on-error: true

      - name: Security scan
        run: npm audit --audit-level=high
        continue-on-error: true

  # Auto-merge configuration
  auto-merge:
    runs-on: ubuntu-latest
    needs: [fast-quality, core-testing, build-validation]
    if: |
      github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
      github.actor != 'dependabot[bot]'
    steps:
      - name: Auto-merge PR
        uses: pascalgn/auto-merge-action@v0.15.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash
          delete_branch: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Quality monitoring and alerts
  quality-monitoring:
    runs-on: ubuntu-latest
    needs: [fast-quality, core-testing, build-validation]
    if: always()
    steps:
      - name: Quality gate status
        run: |
          echo "Fast Quality: ${{ needs.fast-quality.result }}"
          echo "Core Testing: ${{ needs.core-testing.result }}"
          echo "Build Validation: ${{ needs.build-validation.result }}"

      - name: Notify on failure
        if: |
          needs.fast-quality.result == 'failure' ||
          needs.core-testing.result == 'failure' ||
          needs.build-validation.result == 'failure'
        run: |
          echo "Quality gates failed - blocking auto-merge"
          echo "Check logs for specific failures"

  # Security and compliance
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dependency audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: CodeQL analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript
        continue-on-error: true

  # Performance monitoring
  performance-check:
    runs-on: ubuntu-latest
    needs: build-validation
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start preview server
        run: npm run preview &

      - name: Wait for server
        run: npx wait-on http://localhost:4173

      - name: Lighthouse CI
        run: npx @lhci/cli@0.12.x autorun
        continue-on-error: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

# Emergency override
# Create .github/auto-merge-disabled file to disable auto-merge
# Remove file to re-enable auto-merge